class Solution {
    // Function to find the number of islands.
    public int numIslands(char[][] grid) {
        // Code here
        if(grid==null || grid.length==0){
            return 0;
        }
        int n = grid.length;
        int m = grid[0].length;
        
        int numOfIsland = 0;
        
        // boolean[][] visited = new boolean[n][m];
        
        for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
                // if(grid[i][j]=='1' && !visited[i][j]){
                if(grid[i][j]!='0'){
                    DFS(grid,i,j);
                    numOfIsland++;
                }
            }
        }
        return numOfIsland;
    }
    void DFS(char[][] grid  ,int i , int j){
        int n = grid.length;
        int m =grid[0].length;
        
        if(i<0 || i>=n || j<0 || j>=m  || grid[i][j]=='0'){
            return;
        }
        grid[i][j] = '0';
        
        DFS(grid,i-1,j);
        DFS(grid,i,j-1);
        DFS(grid,i+1,j);
        DFS(grid,i,j+1);
        DFS(grid,i-1,j+1);
        DFS(grid,i+1,j-1);
        DFS(grid,i+1,j+1);
        DFS(grid,i-1,j-1);
        
    }

}
